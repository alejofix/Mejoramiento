DELIMITER $$

CREATE PROCEDURE COMUNICACION_AVISOS_INSERTAR(
	IN FECHA_AVISO DATETIME,
    IN USUARIO_IN VARCHAR(255),
    IN ESTADO_AVISO INT(2),
    IN N_AVISO INT(10),
    IN A_REGIONAL VARCHAR(50),
    IN A_FALLA VARCHAR(50),
    IN A_DETALLE VARCHAR(50),
    IN A_PRIORIDAD INT(1),
    OUT ID_AVISO BIGINT(20)
)
BEGIN
	DECLARE CANTIDAD INT(10);
    
    SELECT COUNT(ID) INTO CANTIDAD FROM comunicacion_avisos WHERE ESTADO = ESTADO_AVISO AND AVISO = N_AVISO;
    IF CANTIDAD > 0 THEN
		SET ID_AVISO = 0;
    ELSE
		INSERT INTO comunicacion_avisos (FECHA, USUARIO, ESTADO, AVISO, REGIONAL, FALLA, DETALLE, PRIORIDAD)
        VALUES (FECHA_AVISO, USUARIO_IN, ESTADO_AVISO, N_AVISO, A_REGIONAL, A_FALLA, A_DETALLE, A_PRIORIDAD);
        SET ID_AVISO = LAST_INSERT_ID();
    END IF;
END$$

CREATE PROCEDURE COMUNICACION_AVISOS_FINALIZAR(
	IN ID_AVISO BIGINT(20),
    IN ID_ESTADO INT(2), 
    IN USUARIO_USER VARCHAR(255),
    OUT RESULTADO INT(1)
)
BEGIN
	DECLARE ID_USUARIO BIGINT(20);
    DECLARE RESPUESTA BOOLEAN DEFAULT 0;
    
	SELECT ID INTO ID_USUARIO FROM USUARIOS WHERE USUARIO_RR = USUARIO_USER;
	
	IF ID_ESTADO = 4 THEN
		UPDATE 
			comunicacion_avisos 
        SET 
			USUARIO = ID_USUARIO, 
            ESTADO = ID_ESTADO 
		WHERE 
			ID = ID_AVISO;
            
        SET RESPUESTA = 1;
    END IF;
    
    SET RESULTADO = RESPUESTA;
END$$

CREATE PROCEDURE COMUNICACION_AVISOS_ELIMINAR(
	IN ID_AVISO BIGINT(20),
    IN USUARIO_USER VARCHAR(255),
    OUT RESULTADO INT(1)
)
BEGIN
	DECLARE ID_USUARIO BIGINT(20);
    DECLARE EXISTENCIA INT(1);
    DECLARE RESPUESTA BOOLEAN DEFAULT 0;
    
    SELECT ID INTO ID_USUARIO FROM USUARIOS WHERE USUARIO_RR = USUARIO_USER;
    SELECT COUNT(ID) INTO EXISTENCIA FROM comunicacion_avisos WHERE ID = ID_AVISO;
    
    IF EXISTENCIA = 1 
		THEN
			UPDATE 
				comunicacion_avisos 
			SET 
				USUARIO = ID_USUARIO,
				ESTADO = 6 
			WHERE 
				ID = ID_AVISO;
			SET RESPUESTA = 1;
	END IF;
    
    SET RESULTADO = RESPUESTA;
END$$

CREATE PROCEDURE COMUNICACION_AVISOS_EDITAR(
	IN ID_AVISO BIGINT(20),
    IN USUARIO_INPUT VARCHAR(255),
    IN REGIONAL_INPUT VARCHAR(50),
    IN FALLA_INPUT VARCHAR(50),
    IN DETALLE_INPUT VARCHAR(50),
    IN PRIORIDAD_INPUT INT(1), 
    OUT RESULTADO INT(1)
)
BEGIN
	DECLARE ID_USUARIO VARCHAR(255);
    DECLARE EXISTENCIA INT(1) DEFAULT 0;
    DECLARE RESPUESTA INT(1) DEFAULT 0;
    
    SELECT ID INTO ID_USUARIO FROM usuarios WHERE USUARIO_RR = USUARIO_INPUT;
    SELECT COUNT(ID) INTO EXISTENCIA FROM comunicacion_avisos WHERE ID = ID_AVISO;
    
    IF EXISTENCIA = 1 THEN 
		UPDATE comunicacion_avisos 
		SET 
			USUARIO = ID_USUARIO,
			REGIONAL = REGIONAL_INPUT,
			FALLA = FALLA_INPUT,
			DETALLE = DETALLE_INPUT, 
			PRIORIDAD = PRIORIDAD_INPUT 
		WHERE 
			ID = ID_AVISO;
		SET RESPUESTA = 1;
	END IF;
    
    SET RESULTADO = RESPUESTA;
END$$






-- TRIGGERS

CREATE TRIGGER TRIGGER_COMUNICACION_AVISOS_INSERTAR AFTER INSERT ON comunicacion_avisos FOR EACH ROW
BEGIN
	DECLARE INFORMACION LONGTEXT;
    DECLARE NOMBRE_USER VARCHAR(100);
    DECLARE USUARIO_USER VARCHAR(10);
    DECLARE A_ESTADO VARCHAR(50);
    
    SELECT NOMBRE, USUARIO_RR INTO NOMBRE_USER, USUARIO_USER FROM usuarios WHERE ID = NEW.USUARIO;
    SELECT ESTADO INTO A_ESTADO FROM estados WHERE ID = NEW.ESTADO;
    
    SET INFORMACION = CONCAT(
		'[FECHA: ', NEW.FECHA, 
        '][USUARIO: ', USUARIO_USER, 
        '][NOMBRE: ', NOMBRE_USER, 
        '][ESTADO: ', A_ESTADO, 
        '][AVISO: ', NEW.AVISO, 
        '][REGIONAL: ', NEW.REGIONAL, 
        '][FALLA: ', NEW.FALLA, 
        '][DETALLE: ', NEW.DETALLE, 
        '][PRIORIDAD: ', NEW.PRIORIDAD, ']');
    
	INSERT INTO COMUNICACION_AVISOS_LOG (FECHA, USUARIO, TIPO, AVISO, DESCRIPCION) 
    VALUES (NEW.FECHA, NEW.USUARIO, 'INSERTAR', NEW.AVISO, INFORMACION);
END


CREATE TRIGGER TRIGGER_COMUNICACION_AVISOS_EDITAR AFTER UPDATE ON comunicacion_avisos FOR EACH ROW
BEGIN
	DECLARE INFORMACION LONGTEXT;
    DECLARE NOMBRE_USER VARCHAR(100);
    DECLARE USUARIO_USER VARCHAR(10);
    DECLARE A_ESTADO VARCHAR(50);
    
    SELECT NOMBRE, USUARIO_RR INTO NOMBRE_USER, USUARIO_USER FROM usuarios WHERE ID = NEW.USUARIO;
    SELECT ESTADO INTO A_ESTADO FROM estados WHERE ID = NEW.ESTADO;
    
    SET INFORMACION = CONCAT(
		'[FECHA: ', OLD.FECHA, 
        '][USUARIO: ', USUARIO_USER, 
        '][NOMBRE: ', NOMBRE_USER, 
        '][ESTADO: ', A_ESTADO, 
        '][AVISO: ', NEW.AVISO, 
        '][REGIONAL: ', NEW.REGIONAL, 
        '][FALLA: ', NEW.FALLA, 
        '][DETALLE: ', NEW.DETALLE, 
        '][PRIORIDAD: ', NEW.PRIORIDAD, ']');
    
    IF NEW.ESTADO = 6 THEN
		INSERT INTO COMUNICACION_AVISOS_LOG (FECHA, USUARIO, TIPO, AVISO, DESCRIPCION) 
		VALUES (NOW(), NEW.USUARIO, 'ELIMINADO', OLD.AVISO, INFORMACION);
	ELSEIF NEW.ESTADO = 4 THEN 
		INSERT INTO COMUNICACION_AVISOS_LOG (FECHA, USUARIO, TIPO, AVISO, DESCRIPCION) 
		VALUES (NOW(), NEW.USUARIO, 'FINALIZADO', OLD.AVISO, INFORMACION);
    ELSE
		INSERT INTO COMUNICACION_AVISOS_LOG (FECHA, USUARIO, TIPO, AVISO, DESCRIPCION) 
		VALUES (NOW(), NEW.USUARIO, 'EDITADO', OLD.AVISO, INFORMACION);
    END IF;
    
END





--trigger

CREATE TRIGGER TRIGGER_COMUNICACION_DETALLE_INSERTAR AFTER INSERT ON COMUNICACION_AVISO_DETALLE FOR EACH ROW
BEGIN
	DECLARE INFO TEXT;
    DECLARE FECHA_ACTUAL DATETIME;
    DECLARE RR_USUARIO VARCHAR(255);
    DECLARE USUARIO_NOMBRE VARCHAR(100);
    
    SELECT NOMBRE, USUARIO_RR INTO USUARIO_NOMBRE, RR_USUARIO FROM usuarios WHERE ID = NEW.USUARIO;
    
    SET FECHA_ACTUAL = NOW();
    SET INFO = CONCAT(
		'[FECHA: ', FECHA_ACTUAL, 
        '][TABLA: ', 'COMUNICACION_AVISO_DETALLE',
        '][TIPO: ', 'INSERTAR',
        '][USUARIO: ', RR_USUARIO, 
        '][NOMBRE USUARIO: ', USUARIO_NOMBRE, ']'
    );
	INSERT INTO LOG_TABLA_SELECT (FECHA, TABLA, TIPO, DESCRIPCION, USUARIO) VALUES (FECHA_ACTUAL, 'COMUNICACION_AVISO_DETALLE', 'INSERTAR', INFO, NEW.USUARIO);
END





CREATE TRIGGER TRIGGER_COMUNICACION_DETALLE_EDITAR AFTER UPDATE ON COMUNICACION_AVISO_DETALLE FOR EACH ROW
BEGIN
	DECLARE INFO TEXT;
    DECLARE FECHA_ACTUAL DATETIME;
    DECLARE RR_USUARIO VARCHAR(255);
    DECLARE USUARIO_NOMBRE VARCHAR(100);
    DECLARE NOMBRE_ESTADO VARCHAR(50);
    
    SELECT NOMBRE, USUARIO_RR INTO USUARIO_NOMBRE, RR_USUARIO FROM usuarios WHERE ID = NEW.USUARIO;
    SELECT ESTADO INTO NOMBRE_ESTADO FROM estados WHERE ID = NEW.ESTADO;
    
    SET FECHA_ACTUAL = NOW();
    SET INFO = CONCAT(
		'[FECHA: ', FECHA_ACTUAL, 
        '][TABLA: ', 'COMUNICACION_AVISO_DETALLE',
        '][TIPO: ', 'EDITAR',
        '][USUARIO: ', RR_USUARIO, 
        '][NOMBRE USUARIO: ', USUARIO_NOMBRE, 
        '][ID: ', NEW.ID, 
        '][NOMBRE: ', NEW.NOMBRE, 
        '][ESTADO: ', NOMBRE_ESTADO, ']'
    );
	
    IF NEW.ESTADO = 6
		THEN
			INSERT INTO LOG_TABLA_SELECT (FECHA, TABLA, TIPO, DESCRIPCION, USUARIO)
			VALUE (NOW(), 'COMUNICACION_AVISO_DETALLE', 'ELIMINADO', INFO, NEW.USUARIO);
	ELSE
		INSERT INTO LOG_TABLA_SELECT (FECHA, TABLA, TIPO, DESCRIPCION, USUARIO)
		VALUE (NOW(), 'COMUNICACION_AVISO_DETALLE', 'EDITADO', INFO, NEW.USUARIO);
    END IF;
END






CREATE TRIGGER TRIGGER_COMUNICACION_DETALLE_INSERTAR AFTER INSERT ON COMUNICACION_AVISO_DETALLE FOR EACH ROW
BEGIN
	DECLARE INFO TEXT;
    DECLARE FECHA_ACTUAL DATETIME;
    DECLARE RR_USUARIO VARCHAR(255);
    DECLARE USUARIO_NOMBRE VARCHAR(100);
    DECLARE NOMBRE_ESTADO VARCHAR(50);
    
    SELECT NOMBRE, USUARIO_RR INTO USUARIO_NOMBRE, RR_USUARIO FROM usuarios WHERE ID = NEW.USUARIO;
    SELECT ESTADO INTO NOMBRE_ESTADO FROM estados WHERE ID = NEW.ESTADO;
    
    SET FECHA_ACTUAL = NOW();
    SET INFO = CONCAT(
		'[FECHA: ', FECHA_ACTUAL, 
        '][TABLA: ', 'COMUNICACION_AVISO_DETALLE',
        '][TIPO: ', 'INSERTAR',
        '][USUARIO: ', RR_USUARIO, 
        '][NOMBRE USUARIO: ', USUARIO_NOMBRE, 
        '][ID: ', NEW.ID, 
        '][NOMBRE: ', NEW.NOMBRE, 
        '][ESTADO: ', NOMBRE_ESTADO, ']'
    );
	INSERT INTO LOG_TABLA_SELECT (FECHA, TABLA, TIPO, DESCRIPCION, USUARIO) VALUES (FECHA_ACTUAL, 'COMUNICACION_AVISO_DETALLE', 'INSERTAR', INFO, NEW.USUARIO);
END


---

DELIMITER $$

CREATE PROCEDURE GUIONES_REGISTRO_HFC_INSERTAR(
	IN FECHA_INPUT DATETIME,
    IN USUARIO_INPUT VARCHAR(255),
    IN TIPO_INPUT INT(2),
    IN AFECTACION_INPUT VARCHAR(25),
    IN AVISO_INPUT VARCHAR(255),
    IN UBICACION_INPUT VARCHAR(10),
    IN INTERMITENCIA_INPUT VARCHAR(2),
    IN GUION_INPUT TEXT,
    IN PRIORIDAD_INPUT INT(2),
    OUT ID_OUTPUT BIGINT(20)
)
BEGIN
	DECLARE ID_USUARIO BIGINT(20);
    DECLARE ID_REGISTRO BIGINT(20);
    SELECT ID INTO ID_USUARIO FROM usuarios WHERE USUARIO_RR = USUARIO_INPUT;
    
    INSERT INTO GUIONES_REGISTRO (FECHA, USUARIO, TIPO, AFECTACION, AVISO, UBICACION) 
    VALUES (FECHA_INPUT, ID_USUARIO, TIPO_INPUT, AFECTACION_INPUT, AVISO_INPUT, UBICACION_INPUT);
    
    SET ID_REGISTRO = LAST_INSERT_ID();
    
    INSERT INTO GUIONES_REGISTRO_HFC (REGISTRO, INTERMITENCIA, GUION, PRIORIDAD) 
    VALUES (ID_REGISTRO, INTERMITENCIA_INPUT, GUION_INPUT, PRIORIDAD_INPUT);
    
    SET ID_OUTPUT = ID_REGISTRO;
    
END$$ 
	